{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Container, TextField, Typography } from '@mui/material';\nimport './SignUp.css';\nimport logo from '../../assets/Image/login.png';\nimport { useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const handleSignup = e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (validationErrors.length === 0) {\n      console.log(\"Signup successful!\");\n      navigate(\"/Home\");\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!firstName) {\n      errors.firstName = \"First Name is required\";\n    }\n    if (!lastName) {\n      errors.lastName = \"Last Name is required\";\n    }\n    if (!email) {\n      errors.email = \"Email Address is required\";\n    }\n    if (!password) {\n      errors.password = \"Password is required\";\n    }\n    if (password !== confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    if (!contactNumber) {\n      errors.contactNumber = \"Contact Number is required\";\n    }\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Hello\"\n  }, void 0, false);\n};\n_s(SignUp, \"hpFLM3HYwJsLELevYd1SsiwMJWo=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Button","Container","TextField","Typography","logo","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","SignUp","_s","navigate","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","contactNumber","setContactNumber","errors","setErrors","handleSignup","e","preventDefault","validationErrors","validateForm","length","console","log","children","_c","$RefreshReg$"],"sources":["C:/Master in science/FrontEnd/ReactJs/upgrade_shop/src/components/signup/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Container, TextField, Typography } from '@mui/material';\r\nimport './SignUp.css';\r\nimport logo from '../../assets/Image/login.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SignUp=()=>{\r\n\r\nconst navigate = useNavigate();\r\nconst [firstName, setFirstName] = useState(\"\");\r\nconst [lastName, setLastName] = useState(\"\");\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\nconst [contactNumber, setContactNumber] = useState(\"\");\r\nconst [errors, setErrors] = useState({});\r\n\r\nconst handleSignup = (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    if (validationErrors.length === 0) {\r\n      console.log(\"Signup successful!\");\r\n      navigate(\"/Home\"); \r\n    } else {\r\n      setErrors(validationErrors);\r\n    }\r\n  };\r\n\r\nconst validateForm = () => {\r\n    const errors = {};\r\n    if (!firstName) {\r\n      errors.firstName = \"First Name is required\";\r\n    }\r\n    if (!lastName) {\r\n      errors.lastName = \"Last Name is required\";\r\n    }\r\n    if (!email) {\r\n      errors.email = \"Email Address is required\";\r\n    }\r\n    if (!password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    if (password !== confirmPassword) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }    if (!contactNumber) {\r\n      errors.contactNumber = \"Contact Number is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n    return (\r\n     <>Hello</>\r\n    )\r\n}\r\n\r\nexport default SignUp;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACxE,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAACA,CAAA,KAAI;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAM4B,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,gBAAgB,GAAGC,YAAY,CAAC,CAAC;IACvC,IAAID,gBAAgB,CAACE,MAAM,KAAK,CAAC,EAAE;MACjCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCtB,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,MAAM;MACLc,SAAS,CAACI,gBAAgB,CAAC;IAC7B;EACF,CAAC;EAEH,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMN,MAAM,GAAG,CAAC,CAAC;IACjB,IAAI,CAACZ,SAAS,EAAE;MACdY,MAAM,CAACZ,SAAS,GAAG,wBAAwB;IAC7C;IACA,IAAI,CAACE,QAAQ,EAAE;MACbU,MAAM,CAACV,QAAQ,GAAG,uBAAuB;IAC3C;IACA,IAAI,CAACE,KAAK,EAAE;MACVQ,MAAM,CAACR,KAAK,GAAG,2BAA2B;IAC5C;IACA,IAAI,CAACE,QAAQ,EAAE;MACbM,MAAM,CAACN,QAAQ,GAAG,sBAAsB;IAC1C;IACA,IAAIA,QAAQ,KAAKE,eAAe,EAAE;MAChCI,MAAM,CAACJ,eAAe,GAAG,wBAAwB;IACnD;IAAK,IAAI,CAACE,aAAa,EAAE;MACvBE,MAAM,CAACF,aAAa,GAAG,4BAA4B;IACrD;IACA,OAAOE,MAAM;EACf,CAAC;EAEC,oBACChB,OAAA,CAAAF,SAAA;IAAA4B,QAAA,EAAE;EAAK,gBAAE,CAAC;AAEf,CAAC;AAAAxB,EAAA,CA/CKD,MAAM;EAAA,QAEKL,WAAW;AAAA;AAAA+B,EAAA,GAFtB1B,MAAM;AAiDZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}